#set($dollar = '$')
angular.module('page', ["ideUI", "ideView", "entityApi"])
	.config(["messageHubProvider", function (messageHubProvider) {
		messageHubProvider.eventIdPrefix = '${projectName}.${perspectiveName}.${name}';
	}])
	.config(["entityApiProvider", function (entityApiProvider) {
		entityApiProvider.baseUrl = "/services/js/${projectName}/gen/api/${perspectiveName}/${name}.js";
	}])
	.controller('PageController', ['$scope', 'messageHub', 'entityApi', function ($scope, messageHub, entityApi) {

		$scope.entity = {};
		$scope.formHeaders = {
			select: "${name} Details",
			create: "Create ${name}",
			update: "Update ${name}"
		};
		$scope.formErrors = {};
		$scope.action = 'select';

		if (window != null && window.frameElement != null && window.frameElement.hasAttribute("data-parameters")) {
			let dataParameters = window.frameElement.getAttribute("data-parameters");
			if (dataParameters) {
				let params = JSON.parse(dataParameters);
				$scope.action = params.action;
				if ($scope.action == "create") {
					$scope.formErrors = {
#foreach ($property in $properties)
#if(!$property.dataAutoIncrement && $property.dataNotNull)
						${property.name}: true,
#end
#end
					};
				}
#foreach ($property in $properties)
#if($property.isDateType)
				if (params.entity.${property.name}) {
					params.entity.${property.name} = new Date(params.entity.${property.name});
				}
#end
#end
				$scope.entity = params.entity;
				$scope.selectedMainEntityKey = params.selectedMainEntityKey;
				$scope.selectedMainEntityId = params.selectedMainEntityId;
#foreach ($property in $properties)
#if($property.widgetType == "DROPDOWN")
				$scope.options${property.name} = params.options${property.name};
#end
#end
			}
		}

		$scope.isValid = function (isValid, property) {
			${dollar}scope.formErrors[property] = !isValid ? true : undefined;
			for (let next in ${dollar}scope.formErrors) {
				if (${dollar}scope.formErrors[next] === true) {
					${dollar}scope.isFormValid = false;
					return;
				}
			}
			${dollar}scope.isFormValid = true;
		};

		$scope.create = function () {
			let entity = $scope.entity;
			entity[$scope.selectedMainEntityKey] = $scope.selectedMainEntityId;
			entityApi.create(entity).then(function (response) {
				if (response.status != 201) {
					$scope.errorMessage = `Unable to create ${name}: '${response.message}'`;
					return;
				}
				messageHub.postMessage("entityCreated", response.data);
				$scope.cancel();
				messageHub.showAlertSuccess("${name}", "${name} successfully created");
			});
		};

		$scope.update = function () {
			let id = ${dollar}scope.entity.${primaryKeysString};
			let entity = $scope.entity;
			entity[$scope.selectedMainEntityKey] = $scope.selectedMainEntityId;
			entityApi.update(id, entity).then(function (response) {
				if (response.status != 200) {
					$scope.errorMessage = `Unable to update ${name}: '${response.message}'`;
					return;
				}
				messageHub.postMessage("entityUpdated", response.data);
				$scope.cancel();
				messageHub.showAlertSuccess("${name}", "${name} successfully updated");
			});
		};

		$scope.cancel = function () {
			$scope.entity = {};
			$scope.action = 'select';
			messageHub.closeDialogWindow("${name}-details");
		};

		$scope.clearErrorMessage = function () {
			$scope.errorMessage = null;
		};

	}]);