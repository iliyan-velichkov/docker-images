/*
 * Generated by Eclipse Dirigible based on model and template.
 *
 * Do not modify the content as it may be re-generated again.
 */
const schemaTemplateManager = dirigibleRequire("template-application-schema/template/template");
const feedTemplateManager = dirigibleRequire("template-application-feed/template/template");
const uiAngularjsTemplateManager = dirigibleRequire("template-application-ui-angular/template/template");
const odataTemplateManager = dirigibleRequire("template-application-odata/template/template");
const generateUtils = dirigibleRequire("ide-generate-service/template/generateUtils");
const parameterUtils = dirigibleRequire("ide-generate-service/template/parameterUtils");

exports.generate = function (model, parameters) {
    model = JSON.parse(model).model;
    let templateSources = exports.getTemplate(parameters).sources;
    parameterUtils.process(model, parameters)
    return generateUtils.generateFiles(model, parameters, templateSources);
};

exports.getTemplate = function (parameters) {
    let schemaTemplate = schemaTemplateManager.getTemplate(parameters);
    let feedTemplate = feedTemplateManager.getTemplate(parameters);
    let uiAngularjsTemplate = uiAngularjsTemplateManager.getTemplate(parameters);
    let odataTemplate = odataTemplateManager.getTemplate(parameters);

    let templateSources = [];
    templateSources = templateSources.concat(schemaTemplate.sources);
    templateSources = templateSources.concat(feedTemplate.sources);
    templateSources = templateSources.concat(uiAngularjsTemplate.sources);
    templateSources = templateSources.concat(odataTemplate.sources);

    odataTemplate.parameters.push({
        name: "generateOData",
        label: "OData",
        type: "checkbox"
    });
    odataTemplate.parameters.forEach(e => {
        if (e.name === "odataNamespace") {
            e.ui = {
                hide: {
                    property: "generateOData",
                    value: false
                }
            };
        }
    });

    return {
        name: "Application - Full Stack",
        description: "Application - full stack with a Database Schema, a set of REST Services and an AngularJS User Interfaces",
        extension: "model",
        sources: templateSources,
        parameters: parameterUtils.getUniqueParameters(schemaTemplate.parameters, feedTemplate.parameters, uiAngularjsTemplate.parameters, odataTemplate.parameters)
    };
};
