{{- if .Values.keycloak.install }}
{{- if .Values.keycloak.serviceAccountCreate }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ required "Missing Keycloak service account name" .Values.keycloak.serviceAccountName }}
  namespace: {{ .Release.Namespace }}
  {{- if .Values.gke.cloudSQL }}
  annotations:
    iam.gke.io/gcp-service-account: {{ .Values.gke.keycloakServiceAccountName }}@{{ .Values.gke.projectId }}.iam.gserviceaccount.com
  {{- end }}
{{- end }}
---  
{{- if .Values.keycloak.database.enabled }}
### Keycloak Database (PostgreSQL) Enabled###
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ required "Missing Keycloak name" .Values.keycloak.name }}-database-claim
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ required "Missing Keycloak database storage" .Values.keycloak.database.storage }}
### Keycloak Database (PostgreSQL) Enabled###
---
### Keycloak Database (PostgreSQL) Enabled###
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ required "Missing Keycloak name" .Values.keycloak.name }}-database
  labels:
    app: {{ required "Missing Keycloak name" .Values.keycloak.name }}-database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ required "Missing Keycloak name" .Values.keycloak.name }}-database
  template:
    metadata:
      labels:
        app: {{ required "Missing Keycloak name" .Values.keycloak.name }}-database
    spec:
      serviceAccountName: {{ include "keycloak.serviceAccountName" . }}
      containers:
        - name: {{ required "Missing Keycloak name" .Values.keycloak.name }}-database
          image: {{ required "Missing Keycloak database storage" .Values.keycloak.database.image }}
          imagePullPolicy: Always
          volumeMounts:
          - name: {{ required "Missing Keycloak name" .Values.keycloak.name }}-database-volume
            mountPath: /var/lib/postgresql/data
          env:
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
            - name: POSTGRES_USER
              value: {{ required "Missing Keycloak username" .Values.keycloak.database.username }}
            - name: POSTGRES_PASSWORD
              value: {{ required "Missing Keycloak password" .Values.keycloak.database.password }}
          ports:
            - name: jdbc
              containerPort: 5432
              protocol: TCP
      volumes:
        - name: {{ required "Missing Keycloak name" .Values.keycloak.name }}-database-volume
          persistentVolumeClaim:
            claimName: {{ required "Missing Keycloak name" .Values.keycloak.name }}-database-claim
### Keycloak Database (PostgreSQL) Enabled###
---
### Keycloak Database (PostgreSQL) Enabled###
apiVersion: v1
kind: Service
metadata:
  name: {{ required "Missing Keycloak name" .Values.keycloak.name }}-database
  labels:
    app: {{ required "Missing Keycloak name" .Values.keycloak.name }}-database
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: jdbc
      protocol: TCP
      name: jdbc
  selector:
    app: {{ required "Missing Keycloak name" .Values.keycloak.name }}-database
### Keycloak Database (PostgreSQL) Enabled###
{{- end }}
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ required "Missing Keycloak name" .Values.keycloak.name }}
  labels:
    app: {{ required "Missing Keycloak name" .Values.keycloak.name }}
spec:
  replicas: {{ required "Missing Keycloak replica count" .Values.keycloak.replicaCount }}
  selector:
    matchLabels:
      app: {{ required "Missing Keycloak name" .Values.keycloak.name }}
  template:
    metadata:
      labels:
        app: {{ required "Missing Keycloak name" .Values.keycloak.name }}
    spec:
      serviceAccountName: {{ include "keycloak.serviceAccountName" . }}
      {{- if .Values.keycloak.database.enabled }}
      initContainers:
        - name: wait-db-ready
          image: busybox:1.28
          command:
            - sh
            - -c
            - for i in {1..15}; do echo "Waiting for database creation."; sleep 2; done;
        {{- if eq .Values.gke.cloudSQL false }}
        - name: check-db-ready
          image: postgres:9.6.5
          command:
            - sh
            - -c
            - until pg_isready -h {{ include "dirigible.fullname" . }}-database -p 5432; do echo waiting for database; sleep 2; done;
        {{- end }}
      {{- end }}
      containers:
        - name: {{ required "Missing Keycloak name" .Values.keycloak.name }}
          image: {{ .Values.keycloak.image }}
          imagePullPolicy: Always
          env:
            - name: PROXY_ADDRESS_FORWARDING
              value: "true"
            - name: KEYCLOAK_USER
              value: {{ required "Missing Keycloak username" .Values.keycloak.username }}
            - name: KEYCLOAK_PASSWORD
              value: {{ required "Missing Keycloak password" .Values.keycloak.password }}
            {{- if .Values.ingress.enabled }}
            - name: KEYCLOAK_FRONTEND_URL
              value:  "http{{ if $.Values.ingress.tls }}s{{ end }}://{{ required "Missing Keycloak name" .Values.keycloak.name }}.{{ required "Missing Ingress host" .Values.ingress.host }}/auth/"
            {{- else if .Values.istio.enabled }}
            - name: KEYCLOAK_FRONTEND_URL
              value:  "http{{ if $.Values.ingress.tls }}s{{ end }}://{{ required "Missing Keycloak name" .Values.keycloak.name }}.{{ required "Missing Ingress host" .Values.ingress.host }}/auth/"
            {{- end }}
            {{- if .Values.keycloak.database.enabled }}            
            - name: DB_VENDOR
              value: postgres
            - name: DB_USER
              value: {{ required "Missing Keycloak database username" .Values.keycloak.database.username }}
            - name: DB_PASSWORD
              value: {{ required "Missing Keycloak password" .Values.keycloak.database.password }}
            - name: DB_ADDR
            {{- else if .Values.gke.cloudSQL }}
            - name: KC_HTTP_RELATIVE_PATH
              value: "/auth"
            - name: DB_VENDOR
              value: postgres
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ required "Missing Keycloak secret" .Values.gke.secretNameKeycloak }}
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ required "Missing Keycloak secret" .Values.gke.secretNameKeycloak }}
                  key: password
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ required "Missing Keycloak secret" .Values.gke.secretNameKeycloak }}
                  key: database
            - name: DB_ADDR
              value: 127.0.0.1
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
        {{- if .Values.gke.cloudSQL }}
        - name: cloud-sql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.28.0
          command:
            - "/cloud_sql_proxy"
            - "-ip_address_types=PRIVATE"
            - "-log_debug_stdout"
            - "-instances={{ required "Missing GCP project id" .Values.gke.projectId }}:{{ required "Missing GCP region" .Values.gke.region }}:{{ required "Missing GCP Cloud SQL Keycloak instance name" .Values.gke.keycloakSqlInstanceName }}=tcp:5432"
          securityContext:
            runAsNonRoot: true
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
        {{- end }}
---

apiVersion: v1
kind: Service
metadata:
  name: {{ required "Missing Keycloak name" .Values.keycloak.name }}
  labels:
    app: {{ required "Missing Keycloak name" .Values.keycloak.name }}
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: {{ required "Missing Keycloak name" .Values.keycloak.name }}

---

{{- else if .Values.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ required "Missing Keycloak name" .Values.keycloak.name }}
  labels:
    app: {{ required "Missing Keycloak name" .Values.keycloak.name }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
{{- if .Values.ingress.tls }}
  tls:
    - hosts:
      - {{ required "Missing Keycloak name" .Values.keycloak.name }}.{{ required "Missing ingress host" .Values.ingress.host }}
      secretName: {{ .Values.keycloak.name }}-tls
{{- end }}
  rules:
    - host: {{ required "Missing Keycloak name" .Values.keycloak.name }}.{{ required "Missing ingress host" .Values.ingress.host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ required "Missing Keycloak name" .Values.keycloak.name }}
                port: 
                  number: 8080
---
{{- else if .Values.istio.enabled }}
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: {{ required "Missing Keycloak name" .Values.keycloak.name }}-gateway
spec:
  selector:
    istio: ingressgateway # use Istio default gateway implementation
  servers:
  - port:
      number: {{ required "Missing Istio server port number" .Values.istio.serversPortNumber }}
      name: {{ required "Missing Istio server port name" .Values.istio.serversPortName }}
      protocol: {{ required "Missing Istio server port protocol" .Values.istio.serversPortProtocol }}
    hosts:
    - {{ required "Missing Keycloak name" .Values.keycloak.name }}.{{ required "Missing ingress host" .Values.ingress.host }}
    {{- if .Values.istio.httpsRedirect }}
    tls:
      httpsRedirect: true
    {{- end}}
  {{- if .Values.istio.enableHttps }}
  - port:
      number: 443
      name: https-443
      protocol: HTTPS
    hosts:
    -  {{ required "Missing Keycloak name" .Values.keycloak.name }}.{{ required "Missing ingress host" .Values.ingress.host }}
    tls:
      mode: SIMPLE 
      credentialName:  {{ required "Missing Keycloak name" .Values.keycloak.name }}.{{ required "Missing ingress host" .Values.ingress.host }}
  {{- end }}
  {{- end }}

---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ required "Missing Keycloak name" .Values.keycloak.name }}
spec:
  hosts:
  - {{ required "Missing Keycloak name" .Values.keycloak.name }}.{{ required "Missing ingress host" .Values.ingress.host }}
  - {{ required "Missing Keycloak name" .Values.keycloak.name }}.{{ required "Missing release namespace" .Release.Namespace }}.svc.cluster.local
  gateways:
  - {{ required "Missing Keycloak name" .Values.keycloak.name }}-gateway
  http:
  - match:
    - uri:
        regex: /.*
    route:
    - destination:
        host: {{ required "Missing Keycloak name" .Values.keycloak.name }}.{{ required "Missing release namespace" .Release.Namespace }}.svc.cluster.local
        port:
          number: 8080
{{- if .Values.istio.enableHttps }}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ required "Missing Keycloak name" .Values.keycloak.name }}
  namespace: istio-ingress
spec:
  secretName: {{ required "Missing Keycloak name" .Values.keycloak.name }}.{{ required "Missing ingress host" .Values.ingress.host }}
  issuerRef: 
    name: letsencrypt
    kind: ClusterIssuer
  commonName: {{ required "Missing Keycloak name" .Values.keycloak.name }}.{{ required "Missing ingress host" .Values.ingress.host }}
  dnsNames: 
  - {{ required "Missing Keycloak name" .Values.keycloak.name }}.{{ required "Missing ingress host" .Values.ingress.host }}
{{- end }}
{{- end }}